<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonENG.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>